name: Deploy to Production Server

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '20'

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Lint code
        run: npm run lint

      - name: Build application
        run: npm run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SITE_URL: ${{ secrets.SITE_URL }}

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          script: |
            set -e
            echo "üì¶ Deploying ICONIC LOGISTICS Website..."
            
            # Navigate to app directory
            cd ${{ secrets.DEPLOY_PATH || '/var/www/iconic-website' }}
            
            # Pull latest code
            echo "üîÑ Pulling latest code from GitHub..."
            git pull origin main
            
            # Install dependencies
            echo "üì¶ Installing dependencies..."
            npm ci --only=production
            
            # Generate Prisma Client
            echo "üîß Generating Prisma Client..."
            npx prisma generate
            
            # Run database migrations
            echo "üóÉÔ∏è Running database migrations..."
            npx prisma migrate deploy
            
            # Build Next.js app
            echo "üèóÔ∏è Building Next.js application..."
            npm run build
            
            # Restart PM2 process
            echo "üîÑ Restarting application..."
            pm2 restart iconic-website || pm2 start npm --name "iconic-website" -- start
            
            # Save PM2 process list
            pm2 save
            
            echo "‚úÖ Deployment completed successfully!"
            
      - name: Notify deployment status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "‚úÖ Deployment successful!"
          else
            echo "‚ùå Deployment failed!"
            exit 1
          fi
